<source>
  @type tail
  path /var/lib/docker/volumes/cowrie-log/_data/cowrie.json
  pos_file /var/lib/docker/volumes/cowrie-log/_data/cowrie.pos
  read_from_head true
  tag honeypot.cowrie
  <parse>
    @type json
  </parse>
</source>

<match honeypot.cowrie>
  @type mongo
  connection_string mongodb://fillthename:fillthepass@103.19.110.150:27017/fillthedb?authSource=admin
  database fillthedb
  collection cowrie_new
  follow_inodes true
</match>

<source>
  @type tail
  path /var/lib/docker/volumes/honeytrap/_data/honeytrap.log
  pos_file /var/lib/docker/volumes/honeytrap/_data/honeytrap.pos
  read_from_head true
 tag honeypot.honeytrap
  <parse>
    @type json
  </parse>
</source>

<match honeypot.honeytrap>
  @type mongo
  connection_string mongodb://fillthename:fillthepass@103.19.110.150:27017/fillthedb?authSource=admin
  database fillthedb
  collection honeytrap_new
  follow_inodes true
</match>

<source>
  @type tail
  path /var/lib/docker/volumes/elasticpot/_data/elasticpot.json
  pos_file /var/lib/docker/volumes/elasticpot/_data/elasticpot.pos
  read_from_head true
  tag honeypot.elasticpot
  <parse>
    @type json
  </parse>
</source>

<filter honeypot.elasticpot>
  @type record_transformer
  <record>
    timestamp ${record["timestamp"]}
    source_address ${record["src_ip"]}
    target_address ${record["dst_ip"]}
    source_port ${record["src_port"]}
    target_port ${record["dst_port"]}
    source_protocol "tcp"
    target_protocol "tcp"
    user_agent ${record["user_agent"]}
    request ${record["request"]}
    payload ${record["payload"]}
    content_type ${record["content_type"]}
    accept_language ${record["accept_language"]}
    hostname ${record["hostname"]}
    externalIP ${record["externalIP"]}
    internalIP ${record["internalIP"]}
    uuid ${record["uuid"]}
    message ${record["message"]}
  </record>
 remove_keys src_ip, dst_ip, src_port, dst_port, user_agent, request, payload, content_type, a>
</filter>

<match honeypot.elasticpot>
  @type mongo
  connection_string mongodb://fillthename:fillthepass@103.19.110.150:27017/fillthedb?authSource=admin
  database fillthedb
  collection elasticpot_new
  follow_inodes true
</match>

<source>
  @type tail
  read_from_head true
  path /var/lib/docker/volumes/rdpy/_data/rdpy.log
  pos_file /var/lib/docker/volumes/rdpy/_data/rdpy.pos
  tag honeypot.rdpy
  <parse>
 @type regexp
    expression /\[\*\]\sINFO:\s(?<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d+Z)\s---\sCon>
    time_format %Y-%m-%dT%H:%M:%S.%NZ
  </parse>
</source>

<match honeypot.rdpy>
  @type mongo
  connection_string mongodb://fillthename:fillthepass@103.19.110.150:27017/fillthedb?authSource=admin
  database fillthedb
  collection rdpy_new
  follow_inodes true
</match>

<source>
  @type tail
  path /var/lib/docker/volumes/dionaea/_data/var/lib/dionaea/dionaea_ews.json
  pos_file /var/lib/docker/volumes/dionaea/_data/var/lib/dionaea/dionaea_ews.pos
  read_from_head true
  tag honeypot.ews
  <parse>
    @type json
 </parse>
</source>

<source>
  @type tail
  read_from_head true
  path /var/lib/docker/volumes/dionaea/_data/var/lib/dionaea/dionaea.json
  pos_file /var/lib/docker/volumes/dionaea/_data/var/lib/dionaea/dionaea.pos
  tag honeypot.dionaea
  <parse>
    @type json
  </parse>
</source>

<match honeypot.dionaea>
  @type mongo
  connection_string mongodb://fillthename:fillthepass@103.19.110.150:27017/fillthedb?authSource=admin
  database fillthedb
  collection dionaea
  follow_inodesÂ true
</match>
